language: java
jdk:
  - openjdk8

branches:
  only:
    - master


# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build"

before_install:
  - chmod +x gradlew

before_deploy:
#  - zip -r practice_spring_boot1 * #오류나면 여기 체크
#  - mkdir -p deploy
#  - mv practice_spring_boot1.zip deploy/practice_spring_boot1.zip

  - mkdir -p before-deploy
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy *
  - cd ../ && mkdir -p deploy
  - mv before-deploy/before-deploy.zip deploy/practice_spring_boot1.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY

    bucket: practice-springboot-build-lee #s3버킷이름
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근권한
    local_dir: deploy #before_deploy에서 생성한 디렉토리 이름
    wait-until-deployed: true


  - provider: codedeploy
      access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
      secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
      bucket: practice-springboot-build-lee # S3 버킷
      key: practice_spring_boot1.zip # 빌드 파일을 압축해서 전달
      bundle_type: zip
      application: springboot-practice1 # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
      deployment_group: springboot-practice1-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
      region: ap-northeast-2
      wait-until-deployed: true

#    -provider: codedeploy
#    access_key_id: $AWS_ACCESS_KEY
#    secret_access_key: $AWS_SECRET_KEY
#
#    bucket: practice-springboot-build-lee
#    key: practice_spring_boot1.zip
#    bundle_type: zip
#    application: springboot-practice1
#    deployment_group: springboot-practice1-group
#    region: ap-northeast-2
#    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람보내기
notifications:
  email:
    recipients:
      - zwzw011@naver.com